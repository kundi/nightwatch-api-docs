---
title: API Reference

language_tabs: # must be one of https://git.io/vQNgJ
  - shell
  # - ruby
  # - python
  # - javascript

toc_footers:
  - <a href='https://nightwatch.io'>Sign Up for Nightwatch</a>

includes:
  - errors

search: true
---

# Introduction

Welcome to the [Nightwatch](https://nightwatch.io) API docs! Here you can find guides on how to interact with data associated with your Nightwatch account using HTTP requests (REST API).

If you don't have an account yet, [sign up](https://app.nightwatch.io) for a Nightwatch account



# Authentication

Nightwatch API uses `access_token` authentication. You need to provide your `access_token` for all requests you issue against our API.

`https://api.nightwatch.io/some_action?access_token=ACCESS_TOKEN`

<aside class="notice">
You must replace <code>ACCESS_TOKEN</code> with your personal access token.
</aside>



# Access Token

## Obtain an access token for your user

```shell
curl 'https://api.nightwatch.io/api/v1/token'
  -X POST
  -H 'Content-Type: application/json'
  -d '{"email": "YOUR_EMAIL", "password": "YOUR_PASSWORD"}
```

> The above command returns JSON structured like this:

```json
  {
    "access_token": "TOKEN"
  }
```

This endpoint gets you the access token that you must include with all your requests.

### HTTP Request

`POST https://api.nightwatch.io/api/v1/token`

### Body Parameters

Parameter | Description
--------- | -----------
email | Your Nightwatch e-mail
password | Your Nightwatch password

<aside class="notice">
  This token is permanent and you only need to get it once. It is only necessary to get it again when you revoke it.
</aside>


## Revoke access token for your user

```shell
curl 'https://api.nightwatch.io/api/v1/token'
  -X DELETE
  -H 'Content-Type: application/json'
  -d '{"email": "YOUR_EMAIL", "password": "YOUR_PASSWORD"}
```

> The above command returns JSON structured like this:

```json
  {
    "access_token": "TOKEN"
  }
```

This will destroy your permanent API token. You can use this if your token becomes compromised.

### HTTP Request

`DELETE https://api.nightwatch.io/api/v1/token`

### Body Parameters

Parameter | Description
--------- | -----------
email | Your Nightwatch e-mail
password | Your Nightwatch password



# Groups

A group is a top-level container for your URLs and global views.

<aside class="notice">Having at least one group is the prerequisite for adding URLs, keywords and other resources.</aside>



## List groups

```shell
  curl 'https://api.nightwatch.io/api/v1/url_groups?access_token=ACCESS_TOKEN' \\
    -H 'Content-Type: application/json'
```

> The above command returns JSON structured like this:

```json
  [
    {
      "id": 36242,
      "name": "Example group",
      "url_count": 0,
      "url_type": null,
      "group_type": "static",
      "dynamic_view_count": 0
    },
    ...
  ]
```

### HTTP Request

`GET https://api.nightwatch.io/api/v1/url_groups?access_token=ACCESS_TOKEN`



## Get a group

```shell
  curl 'https://api.nightwatch.io/api/v1/url_groups/36242?access_token=ACCESS_TOKEN' \\
    -H 'Content-Type: application/json'
```

> The above command returns JSON structured like this:

```json
  {
    "id": 36242,
    "name": "Renamed group",
    "url_count": 0,
    "url_type": null,
    "group_type": "static",
    "dynamic_view_count": 0
  }
```

### HTTP Request

`GET https://api.nightwatch.io/api/v1/url_groups/<group_id>?access_token=ACCESS_TOKEN`

### URL Parameters

Parameter | Description
--------- | -----------
group_id  | The id of the group



## Create a group

```shell
  curl 'https://api.nightwatch.io/api/v1/url_groups?access_token=ACCESS_TOKEN' \\
    -X POST \\
    -H 'Content-Type: application/json' \\
    -d '
      {
        "url_group": {
          "name": "Example group",
        }
      }
    '
```

> The above command returns JSON structured like this:

```json
  {
    "id": 36242,
    "name": "Example group",
    "url_count": 0,
    "url_type": null,
    "group_type": "static",
    "dynamic_view_count": 0
  }
```

### HTTP Request

`POST https://api.nightwatch.io/api/v1/url_groups?access_token=ACCESS_TOKEN`

### Body Parameters

Parameter | Description
--------- | -----------
name      | The name of the group



## Update a group

```shell
  curl 'https://api.nightwatch.io/api/v1/url_groups/36242?access_token=ACCESS_TOKEN' \\
    -X PUT \\
    -H 'Content-Type: application/json' \\
    -d '
      {
        "url_group": {
          "name": "Renamed group",
        }
      }
    '
```

> The above command returns JSON structured like this:

```json
  {
    "id": 36242,
    "name": "Renamed group",
    "url_count": 0,
    "url_type": null,
    "group_type": "static",
    "dynamic_view_count": 0
  }
```

### HTTP Request

`PUT https://api.nightwatch.io/api/v1/url_groups/<group_id>?access_token=ACCESS_TOKEN`

### URL Parameters

Parameter | Description
--------- | -----------
group_id  | The id of the group

### Body Parameters

Parameter | Description
--------- | -----------
name      | The name of the group


## Delete a group

```shell
  curl 'https://api.nightwatch.io/api/v1/url_groups/36242?access_token=ACCESS_TOKEN' \\
    -X DELETE \\
    -H 'Content-Type: application/json'
```

> The above command returns JSON structured like this:

```json
  {
    "id": 36242,
    "name": "Example group",
    "url_count": 0,
    "url_type": null,
    "group_type": "static",
    "dynamic_view_count": 0
  }
```

### HTTP Request

`DELETE https://api.nightwatch.io/api/v1/url_groups/<group_id>?access_token=ACCESS_TOKEN`

### URL Parameters

Parameter | Description
--------- | -----------
group_id  | The id of the group
